import React, { useState } from "react";
import { useAuth } from "../context/AuthContext";
import { useNavigate } from "react-router-dom";
import LoginModal from "./LoginModal";
import RegisterModal from "./RegisterModal";
import "../styles/Header.css";

const Header: React.FC = () => {
    const { isAuthenticated, role, logout } = useAuth();
    const [isLoginOpen, setIsLoginOpen] = useState(false);
    const [isRegisterOpen, setIsRegisterOpen] = useState(false);
    const navigate = useNavigate();

    const handleNavigate = (path: string) => () => navigate(path);

    return (
        <header className="header">
            <h1 className="logo" onClick={handleNavigate("/catalog")}>AToyStore</h1>

            <nav className="nav-links">
                {isAuthenticated ? (
                    <>
                        {role === "Admin" ? (
                            <>
                                <span onClick={handleNavigate("/admin/products")}>Ð¢Ð¾Ð²Ð°Ñ€Ñ‹</span>
                                <span onClick={handleNavigate("/admin/orders")}>Ð—Ð°ÐºÐ°Ð·Ñ‹</span>
                            </>
                        ) : (
                            <>
                                <span onClick={handleNavigate("/orders")}>ÐœÐ¾Ð¸ Ð·Ð°ÐºÐ°Ð·Ñ‹</span>
                                <span onClick={handleNavigate("/profile")}>ÐŸÑ€Ð¾Ñ„Ð¸Ð»ÑŒ</span>
                                <span onClick={handleNavigate("/favorites")}>Ð˜Ð·Ð±Ñ€Ð°Ð½Ð½Ð¾Ðµ</span> {/* ðŸ‘ˆ Ð´Ð¾Ð±Ð°Ð²Ð»ÐµÐ½Ð¾ */}
                                <span onClick={handleNavigate("/checkout")}>ÐšÐ¾Ñ€Ð·Ð¸Ð½Ð°</span>
                            </>
                        )}
                        <span className="logout-link" onClick={logout}>Ð’Ñ‹Ñ…Ð¾Ð´</span>
                    </>
                ) : (
                    <span className="login-link" onClick={() => setIsLoginOpen(true)}>Ð’Ñ…Ð¾Ð´</span>
                )}
            </nav>

            <LoginModal 
                isOpen={isLoginOpen} 
                onClose={() => setIsLoginOpen(false)}
                onOpenRegister={() => {
                    setIsLoginOpen(false);
                    setIsRegisterOpen(true);
                }}
            />
            <RegisterModal 
                isOpen={isRegisterOpen} 
                onClose={() => setIsRegisterOpen(false)}
                onOpenLogin={() => {
                    setIsRegisterOpen(false);
                    setIsLoginOpen(true);
                }}
            />
        </header>
    );
};

export default Header;
